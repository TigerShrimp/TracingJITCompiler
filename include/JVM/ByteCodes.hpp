#ifndef BYTECODES_HPP
#define BYTECODES_HPP

#include <map>

#include "Definitions.hpp"
namespace JVM {
enum Mnemonic : uint8_t {
  NOP,
  ACONST_NULL,
  ICONST_M1,
  ICONST_0,
  ICONST_1,
  ICONST_2,
  ICONST_3,
  ICONST_4,
  ICONST_5,
  LCONST_0,
  LCONST_1,
  FCONST_0,
  FCONST_1,
  FCONST_2,
  DCONST_0,
  DCONST_1,
  BIPUSH,
  SIPUSH,
  LDC,
  LDC_W,
  LDC2_W,
  ILOAD,
  LLOAD,
  FLOAD,
  DLOAD,
  ALOAD,
  ILOAD_0,
  ILOAD_1,
  ILOAD_2,
  ILOAD_3,
  LLOAD_0,
  LLOAD_1,
  LLOAD_2,
  LLOAD_3,
  FLOAD_0,
  FLOAD_1,
  FLOAD_2,
  FLOAD_3,
  DLOAD_0,
  DLOAD_1,
  DLOAD_2,
  DLOAD_3,
  ALOAD_0,
  ALOAD_1,
  ALOAD_2,
  ALOAD_3,
  IALOAD,
  LALOAD,
  FALOAD,
  DALOAD,
  AALOAD,
  BALOAD,
  CALOAD,
  SALOAD,
  ISTORE,
  LSTORE,
  FSTORE,
  DSTORE,
  ASTORE,
  ISTORE_0,
  ISTORE_1,
  ISTORE_2,
  ISTORE_3,
  LSTORE_0,
  LSTORE_1,
  LSTORE_2,
  LSTORE_3,
  FSTORE_0,
  FSTORE_1,
  FSTORE_2,
  FSTORE_3,
  DSTORE_0,
  DSTORE_1,
  DSTORE_2,
  DSTORE_3,
  ASTORE_0,
  ASTORE_1,
  ASTORE_2,
  ASTORE_3,
  IASTORE,
  LASTORE,
  FASTORE,
  DASTORE,
  AASTORE,
  BASTORE,
  CASTORE,
  SASTORE,
  POP,
  POP2,
  DUP,
  DUP_X1,
  DUP_X2,
  DUP2,
  DUP2_X1,
  DUP2_X2,
  SWAP,
  IADD,
  LADD,
  FADD,
  DADD,
  ISUB,
  LSUB,
  FSUB,
  DSUB,
  IMUL,
  LMUL,
  FMUL,
  DMUL,
  IDIV,
  LDIV,
  FDIV,
  DDIV,
  IREM,
  LREM,
  FREM,
  DREM,
  INEG,
  LNEG,
  FNEG,
  DNEG,
  ISHL,
  LSHL,
  ISHR,
  LSHR,
  IUSHR,
  LUSHR,
  IAND,
  LAND,
  IOR,
  LOR,
  IXOR,
  LXOR,
  IINC,
  I2L,
  I2F,
  I2D,
  L2I,
  L2F,
  L2D,
  F2I,
  F2L,
  F2D,
  D2I,
  D2L,
  D2F,
  I2B,
  I2C,
  I2S,
  LCMP,
  FCMPL,
  FCMPG,
  DCMPL,
  DCMPG,
  IFEQ,
  IFNE,
  IFLT,
  IFGE,
  IFGT,
  IFLE,
  IF_ICMPEQ,
  IF_ICMPNE,
  IF_ICMPLT,
  IF_ICMPGE,
  IF_ICMPGT,
  IF_ICMPLE,
  IF_ACMPEQ,
  IF_ACMPNE,
  GOTO,
  JSR,
  RET,
  TABLESWITCH,
  LOOKUPSWITCH,
  IRETURN,
  LRETURN,
  FRETURN,
  DRETURN,
  ARETURN,
  RETURN,
  GETSTATIC,
  PUTSTATIC,
  GETFIELD,
  PUTFIELD,
  INVOKEVIRTUAL,
  INVOKESPECIAL,
  INVOKESTATIC,
  INVOKEINTERFACE,
  INVOKEDYNAMIC,
  NEW,
  NEWARRAY,
  ANEWARRAY,
  ARRAYLENGTH,
  ATHROW,
  CHECKCAST,
  INSTANCEOF,
  MONITORENTER,
  MONITOREXIT,
  WIDE,
  MULTIANEWARRAY,
  IFNULL,
  IFNONNULL,
  GOTO_W,
  JSR_W,
  BREAKPOINT,
};

static const std::map<Mnemonic, size_t> parametersMap = {
    {BIPUSH, 1},
    {SIPUSH, 2},
    {LDC, 1},
    {LDC_W, 2},
    {LDC2_W, 2},
    {ILOAD, 1},
    {LLOAD, 1},
    {FLOAD, 1},
    {DLOAD, 1},
    {ALOAD, 1},
    {ISTORE, 1},
    {LSTORE, 1},
    {FSTORE, 1},
    {DSTORE, 1},
    {ASTORE, 1},
    {IINC, 2},
    {IFEQ, 2},
    {IFNE, 2},
    {IFLT, 2},
    {IFGE, 2},
    {IFGT, 2},
    {IFLE, 2},
    {IF_ICMPEQ, 2},
    {IF_ICMPNE, 2},
    {IF_ICMPLT, 2},
    {IF_ICMPGE, 2},
    {IF_ICMPGT, 2},
    {IF_ICMPLE, 2},
    {IF_ACMPEQ, 2},
    {IF_ACMPNE, 2},
    {GOTO, 2},
    {JSR, 2},
    {RET, 1},
    {TABLESWITCH, 16},
    {LOOKUPSWITCH, 8},
    {GETSTATIC, 2},
    {PUTSTATIC, 2},
    {GETFIELD, 2},
    {PUTFIELD, 2},
    {INVOKEVIRTUAL, 2},
    {INVOKESPECIAL, 2},
    {INVOKESTATIC, 2},
    {INVOKEINTERFACE, 4},
    {INVOKEDYNAMIC, 4},
    {NEW, 2},
    {NEWARRAY, 1},
    {ANEWARRAY, 2},
    {CHECKCAST, 2},
    {INSTANCEOF, 2},
    // TODO: WIDE is wierd, if operand after is iinc, then 5 operands,
    // otherwise
    // 3
    {MULTIANEWARRAY, 3},
    {IFNULL, 2},
    {IFNONNULL, 2},
    {GOTO_W, 4},
    {JSR_W, 4}};

static const size_t getParameters(Mnemonic mnem) {
  auto finder = parametersMap.find(mnem);
  return finder == parametersMap.end() ? 0 : parametersMap.at(mnem);
}

static const std::map<Mnemonic, std::string> byteCodeNames = {
    {NOP, "NOP"},
    {ACONST_NULL, "ACONST_NULL"},
    {ICONST_M1, "ICONST_M1"},
    {ICONST_0, "ICONST_0"},
    {ICONST_1, "ICONST_1"},
    {ICONST_2, "ICONST_2"},
    {ICONST_3, "ICONST_3"},
    {ICONST_4, "ICONST_4"},
    {ICONST_5, "ICONST_5"},
    {LCONST_0, "LCONST_0"},
    {LCONST_1, "LCONST_1"},
    {FCONST_0, "FCONST_0"},
    {FCONST_1, "FCONST_1"},
    {FCONST_2, "FCONST_2"},
    {DCONST_0, "DCONST_0"},
    {DCONST_1, "DCONST_1"},
    {BIPUSH, "BIPUSH"},
    {SIPUSH, "SIPUSH"},
    {LDC, "LDC"},
    {LDC_W, "LDC_W"},
    {LDC2_W, "LDC2_W"},
    {ILOAD, "ILOAD"},
    {LLOAD, "LLOAD"},
    {FLOAD, "FLOAD"},
    {DLOAD, "DLOAD"},
    {ALOAD, "ALOAD"},
    {ILOAD_0, "ILOAD_0"},
    {ILOAD_1, "ILOAD_1"},
    {ILOAD_2, "ILOAD_2"},
    {ILOAD_3, "ILOAD_3"},
    {LLOAD_0, "LLOAD_0"},
    {LLOAD_1, "LLOAD_1"},
    {LLOAD_2, "LLOAD_2"},
    {LLOAD_3, "LLOAD_3"},
    {FLOAD_0, "FLOAD_0"},
    {FLOAD_1, "FLOAD_1"},
    {FLOAD_2, "FLOAD_2"},
    {FLOAD_3, "FLOAD_3"},
    {DLOAD_0, "DLOAD_0"},
    {DLOAD_1, "DLOAD_1"},
    {DLOAD_2, "DLOAD_2"},
    {DLOAD_3, "DLOAD_3"},
    {ALOAD_0, "ALOAD_0"},
    {ALOAD_1, "ALOAD_1"},
    {ALOAD_2, "ALOAD_2"},
    {ALOAD_3, "ALOAD_3"},
    {IALOAD, "IALOAD"},
    {LALOAD, "LALOAD"},
    {FALOAD, "FALOAD"},
    {DALOAD, "DALOAD"},
    {AALOAD, "AALOAD"},
    {BALOAD, "BALOAD"},
    {CALOAD, "CALOAD"},
    {SALOAD, "SALOAD"},
    {ISTORE, "ISTORE"},
    {LSTORE, "LSTORE"},
    {FSTORE, "FSTORE"},
    {DSTORE, "DSTORE"},
    {ASTORE, "ASTORE"},
    {ISTORE_0, "ISTORE_0"},
    {ISTORE_1, "ISTORE_1"},
    {ISTORE_2, "ISTORE_2"},
    {ISTORE_3, "ISTORE_3"},
    {LSTORE_0, "LSTORE_0"},
    {LSTORE_1, "LSTORE_1"},
    {LSTORE_2, "LSTORE_2"},
    {LSTORE_3, "LSTORE_3"},
    {FSTORE_0, "FSTORE_0"},
    {FSTORE_1, "FSTORE_1"},
    {FSTORE_2, "FSTORE_2"},
    {FSTORE_3, "FSTORE_3"},
    {DSTORE_0, "DSTORE_0"},
    {DSTORE_1, "DSTORE_1"},
    {DSTORE_2, "DSTORE_2"},
    {DSTORE_3, "DSTORE_3"},
    {ASTORE_0, "ASTORE_0"},
    {ASTORE_1, "ASTORE_1"},
    {ASTORE_2, "ASTORE_2"},
    {ASTORE_3, "ASTORE_3"},
    {IASTORE, "IASTORE"},
    {LASTORE, "LASTORE"},
    {FASTORE, "FASTORE"},
    {DASTORE, "DASTORE"},
    {AASTORE, "AASTORE"},
    {BASTORE, "BASTORE"},
    {CASTORE, "CASTORE"},
    {SASTORE, "SASTORE"},
    {POP, "POP"},
    {POP2, "POP2"},
    {DUP, "DUP"},
    {DUP_X1, "DUP_X1"},
    {DUP_X2, "DUP_X2"},
    {DUP2, "DUP2"},
    {DUP2_X1, "DUP2_X1"},
    {DUP2_X2, "DUP2_X2"},
    {SWAP, "SWAP"},
    {IADD, "IADD"},
    {LADD, "LADD"},
    {FADD, "FADD"},
    {DADD, "DADD"},
    {ISUB, "ISUB"},
    {LSUB, "LSUB"},
    {FSUB, "FSUB"},
    {DSUB, "DSUB"},
    {IMUL, "IMUL"},
    {LMUL, "LMUL"},
    {FMUL, "FMUL"},
    {DMUL, "DMUL"},
    {IDIV, "IDIV"},
    {LDIV, "LDIV"},
    {FDIV, "FDIV"},
    {DDIV, "DDIV"},
    {IREM, "IREM"},
    {LREM, "LREM"},
    {FREM, "FREM"},
    {DREM, "DREM"},
    {INEG, "INEG"},
    {LNEG, "LNEG"},
    {FNEG, "FNEG"},
    {DNEG, "DNEG"},
    {ISHL, "ISHL"},
    {LSHL, "LSHL"},
    {ISHR, "ISHR"},
    {LSHR, "LSHR"},
    {IUSHR, "IUSHR"},
    {LUSHR, "LUSHR"},
    {IAND, "IAND"},
    {LAND, "LAND"},
    {IOR, "IOR"},
    {LOR, "LOR"},
    {IXOR, "IXOR"},
    {LXOR, "LXOR"},
    {IINC, "IINC"},
    {I2L, "I2L"},
    {I2F, "I2F"},
    {I2D, "I2D"},
    {L2I, "L2I"},
    {L2F, "L2F"},
    {L2D, "L2D"},
    {F2I, "F2I"},
    {F2L, "F2L"},
    {F2D, "F2D"},
    {D2I, "D2I"},
    {D2L, "D2L"},
    {D2F, "D2F"},
    {I2B, "I2B"},
    {I2C, "I2C"},
    {I2S, "I2S"},
    {LCMP, "LCMP"},
    {FCMPL, "FCMPL"},
    {FCMPG, "FCMPG"},
    {DCMPL, "DCMPL"},
    {DCMPG, "DCMPG"},
    {IFEQ, "IFEQ"},
    {IFNE, "IFNE"},
    {IFLT, "IFLT"},
    {IFGE, "IFGE"},
    {IFGT, "IFGT"},
    {IFLE, "IFLE"},
    {IF_ICMPEQ, "IF_ICMPEQ"},
    {IF_ICMPNE, "IF_ICMPNE"},
    {IF_ICMPLT, "IF_ICMPLT"},
    {IF_ICMPGE, "IF_ICMPGE"},
    {IF_ICMPGT, "IF_ICMPGT"},
    {IF_ICMPLE, "IF_ICMPLE"},
    {IF_ACMPEQ, "IF_ACMPEQ"},
    {IF_ACMPNE, "IF_ACMPNE"},
    {GOTO, "GOTO"},
    {JSR, "JSR"},
    {RET, "RET"},
    {TABLESWITCH, "TABLESWITCH"},
    {LOOKUPSWITCH, "LOOKUPSWITCH"},
    {IRETURN, "IRETURN"},
    {LRETURN, "LRETURN"},
    {FRETURN, "FRETURN"},
    {DRETURN, "DRETURN"},
    {ARETURN, "ARETURN"},
    {RETURN, "RETURN"},
    {GETSTATIC, "GETSTATIC"},
    {PUTSTATIC, "PUTSTATIC"},
    {GETFIELD, "GETFIELD"},
    {PUTFIELD, "PUTFIELD"},
    {INVOKEVIRTUAL, "INVOKEVIRTUAL"},
    {INVOKESPECIAL, "INVOKESPECIAL"},
    {INVOKESTATIC, "INVOKESTATIC"},
    {INVOKEINTERFACE, "INVOKEINTERFACE"},
    {INVOKEDYNAMIC, "INVOKEDYNAMIC"},
    {NEW, "NEW"},
    {NEWARRAY, "NEWARRAY"},
    {ANEWARRAY, "ANEWARRAY"},
    {ARRAYLENGTH, "ARRAYLENGTH"},
    {ATHROW, "ATHROW"},
    {CHECKCAST, "CHECKCAST"},
    {INSTANCEOF, "INSTANCEOF"},
    {MONITORENTER, "MONITORENTER"},
    {MONITOREXIT, "MONITOREXIT"},
    {WIDE, "WIDE"},
    {MULTIANEWARRAY, "MULTIANEWARRAY"},
    {IFNULL, "IFNULL"},
    {IFNONNULL, "IFNONNULL"},
    {GOTO_W, "GOTO_W"},
    {JSR_W, "JSR_W"},
    {BREAKPOINT, "BREAKPOINT"}};
}  // namespace JVM
#endif  // BYTECODES_HPP